version: "3"

services:
  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 10s

  dragonfly:
    image: docker.dragonflydb.io/dragonflydb/dragonfly
    ulimits:
      memlock: -1
    ports:
      - "6379:6379"
    volumes:
      - dragonfly_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "localhost", "ping"]
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 5s

  resize-it:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3005:3000"
    environment:
      PORT: 3000
      HOST: 0.0.0.0
      MINIO_ENDPOINT: minio
      MINIO_PORT: 9000
      MINIO_USE_SSL: "false"
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_BUCKET: images
      MAX_WIDTH: 1920
      MAX_HEIGHT: 1080
      IMAGE_QUALITY: 80
      CACHE_ENABLED: "true"
      CACHE_MAX_AGE: 86400
      # Security settings
      ENABLE_API_KEY_AUTH: "true"
      API_KEYS: "dev-api-key,test-api-key"
      RATE_LIMIT_ENABLED: "true"
      RATE_LIMIT_WINDOW_MS: 60000
      RATE_LIMIT_MAX: 100
      CORS_ALLOWED_ORIGINS: "*"
      # Dragonfly settings
      DRAGONFLY_HOST: dragonfly
      DRAGONFLY_PORT: 6379
      DRAGONFLY_ENABLED: "true"
    depends_on:
      minio:
        condition: service_healthy
      dragonfly:
        condition: service_healthy
    restart: on-failure

volumes:
  minio_data:
  dragonfly_data:
