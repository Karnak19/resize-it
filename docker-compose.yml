version: "3.8"

services:
  # MinIO service for object storage
  minio:
    image: minio/minio:latest
    expose:
      - "9000"
      - "9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY:-minioadmin}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped

  # Dragonfly service for caching
  dragonfly:
    image: docker.dragonflydb.io/dragonflydb/dragonfly:latest
    ulimits:
      memlock: -1
    expose:
      - "6379"
    volumes:
      - dragonfly_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "localhost", "ping"]
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 5s
    restart: unless-stopped

  # Main application service
  resize-it:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      MINIO_ENDPOINT: minio
      MINIO_PORT: 9000
      MINIO_USE_SSL: "${MINIO_USE_SSL:-false}"
      MINIO_ACCESS_KEY: "${MINIO_ACCESS_KEY:-minioadmin}"
      MINIO_SECRET_KEY: "${MINIO_SECRET_KEY:-minioadmin}"
      MINIO_BUCKET: "${MINIO_BUCKET:-images}"
      MAX_WIDTH: "${MAX_WIDTH:-1920}"
      MAX_HEIGHT: "${MAX_HEIGHT:-1080}"
      IMAGE_QUALITY: "${IMAGE_QUALITY:-80}"
      CACHE_ENABLED: "${CACHE_ENABLED:-true}"
      CACHE_MAX_AGE: "${CACHE_MAX_AGE:-86400}"
      # Security settings
      ENABLE_API_KEY_AUTH: "${ENABLE_API_KEY_AUTH:-true}"
      API_KEYS: "${API_KEYS:-dev-api-key,test-api-key}"
      RATE_LIMIT_ENABLED: "${RATE_LIMIT_ENABLED:-true}"
      RATE_LIMIT_WINDOW_MS: "${RATE_LIMIT_WINDOW_MS:-60000}"
      RATE_LIMIT_MAX: "${RATE_LIMIT_MAX:-100}"
      CORS_ALLOWED_ORIGINS: "${CORS_ALLOWED_ORIGINS:-*}"
      # Dragonfly settings
      DRAGONFLY_HOST: dragonfly
      DRAGONFLY_PORT: 6379
      DRAGONFLY_ENABLED: "${DRAGONFLY_ENABLED:-true}"
      DRAGONFLY_CACHE_TTL: "${DRAGONFLY_CACHE_TTL:-86400}"
    depends_on:
      minio:
        condition: service_healthy
      dragonfly:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s

# Define named volumes for data persistence
volumes:
  minio_data:
    name: resize-it-minio-data
  dragonfly_data:
    name: resize-it-dragonfly-data
